name: Build and Release yt-srt Executable

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Install @angablue/exe
        run: npm install --save-dev @angablue/exe

      - name: Create exe.json Configuration
        run: |
          powershell -Command "Set-Content -Path exe.json -Value '{\"entry\": \"server.js\", \"out\": \"build/yt-srt.exe\", \"version\": \"${{ github.event.inputs.version }}\", \"icon\": \"public/favicon.ico\", \"executionLevel\": \"asInvoker\", \"properties\": {\"FileDescription\": \"yt-srt Executable\", \"ProductName\": \"yt-srt\", \"CompanyName\": \"yebekhe\", \"LegalCopyright\": \"Â© 2025 yebekhe\"}}'"
        shell: cmd

      - name: Build Executable
        run: npx exe exe.json

      - name: Prepare Release Assets
        run: |
          mkdir release-assets
          copy build\yt-srt.exe release-assets\
          xcopy public release-assets\public /E /H /C /I
        shell: cmd

      - name: Zip Release Assets
        run: |
          powershell -Command "Compress-Archive -Path release-assets\* -DestinationPath yt-srt-${{ github.event.inputs.version }}.zip"
        shell: cmd

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false

      - name: Upload ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: yt-srt-${{ github.event.inputs.version }}.zip
          asset_name: yt-srt-${{ github.event.inputs.version }}.zip
          asset_content_type: application/zip
